Решение задач по Python в рамках курса "Программирование на Python для начинающих"

==============================================================================================================
		ПЕРЕМЕННЫЕ И ОПЕРАЦИИ НАД ЧИСЛАМИ
==============================================================================================================

Напишите программу в которой:
    Переменная a объявлена и ее значение равно результату выражения 667 минус 13
    Переменная b объявлена и ее значение на 101 больше значения переменной a
    Переменная c объявлена и ее значение равно сумме переменных a и b
    Переменные a, b и c выведены на экран одной строкой

Решение:
a = 667 - 13
b = a + 101
c = a + b
print (a, b, c)

==============================================================================================================

Напишите программу в которой:
    Переменная a объявлена и ее значение равно результату умножения 10.5 на 2
    Переменная b объявлена и ее значение равно сумме a и a / 3
    Переменная c объявлена и ее значение равно сумме переменных a и b, умноженной на 2
    Переменные a, b и c выведены на экран одной строкой

Решение:
a = 10.5 * 2;
b = a + a / 3;
c = (a + b) * 2;
print (a, b, c)

==============================================================================================================

Присвойте переменной с именем string значение, полученное с помощью функции input.
Следующей строкой напечатайте значение переменной функцией print

Решение:
string = input()
print(string)

==============================================================================================================
		СТРОКИ
==============================================================================================================

Нужно написать программу, которая обменивает две переменные значениями.

Решение:
a = input()
b = input()
tmp = a
a = b
b = tmp
print(a, b, tmp)

==============================================================================================================

Нужно написать программу:
    Переменной hello присвойте значение «Привет,» или «Здравствуй,»
    Переменной name присвойте значение, полученное с помощью функции input от пользователя.
    Переменной greeting присвойте значение, равное склеенным строкам hello и name.
    Выведите значение переменной greeting на экран.

Решение:
hello = 'Привет,'
name = input()
greeting = hello + name
print(greeting)

==============================================================================================================

Надо сделать некое подобие калькулятора. 
В отличие от настоящего калькулятора, наш будет уметь только складывать и только два числа.

Решение:
a = int(input())
b = int(input())
print('Сумма=' + str(a + b))

==============================================================================================================
		ВЕТВЛЕНИЕ
==============================================================================================================

Напишите программу, которая описывает одним словом температуру, введённую пользователем. 
Программа должна сохранить введённую температуру в переменную t в виде целого числа.
Если число меньше −4, программа должна вывести «морозно».
Если число меньше 0 и больше либо равно −4, программа должна вывести на экран «холодно».
Если число больше либо равно 0 и меньше 12 — «прохладно».
Если больше либо равно 12 и меньше 27 — «тепло».
Если больше либо равно 27 — «жарко».
При написании программы используйте операторы if, elif, else, and и также операторы сравнения.

Решение:
t = int(input('Какая температура сейчас?'))
if t < -4:
    print('морозно')
elif t < 0 and t >= -4:
    print('холодно')
elif t > 0 and t < 12:
    print('прохладно')
elif t >= 12 and t < 27:
    print('тепло')
else:
    print('жарко')

==============================================================================================================
		ПРОДВИНУТЫЕ СТРОКИ
==============================================================================================================
Напишите программу, в которой переменной string присвоено значение, введённое пользователем. 
Тип переменной string — строка.
Программа должна преобразовать строку, введённую пользователем в верхний регистр с помощью метода upper и 
вывести на экран преобразованную строку.

Решение:
string = input('Опишите ситуацию')
print(string.upper())

==============================================================================================================

Эта программа должна делать почти то же самое, что и предыдущая. 
Напишите программу, в которой переменной string присвоено значение, введённое пользователем. 
Тип переменной string — строка.

Решение:
string = input('Enter anything')
print(string.lower())

==============================================================================================================

Улучшенный мини-калькулятор

Решение:
a = input('Enter the first variable')
b = input('Enter the second variable')

if a.isdigit() and b.isdigit():
    print('Сумма=' + str(int(a) + int(b)))
else:
    print('Вы ввели не число')

==============================================================================================================

Напишите программу, которая записывает строку, введённую пользователем в переменную string. 
Программа должна проверить длину строки. 
Если длина строки больше либо равна двум — программа должна вывести первый и последний символ этой строки. 
Иначе — программа должна вывести надпись «Ошибка»

Решение:
string = input()
if len(string) >= 2:
    print(string[0], string[-1])
else:
    print('Ошибка')

==============================================================================================================

Напишите программу, которая записывает строку, введённую пользователем в переменную string. 
Программа должна проверить длину строки. 
Если длина строки больше либо равна пяти — программа должна вывести первые три и последние три символа введенной строки. 
Иначе — программа должна вывести надпись «Ошибка»

Решение:
string = input('Введите текст')
if len(string) >= 5:
    print(string[:3], string[-3:])
else:
    print('Ошибка')

==============================================================================================================

Программа должна вывести на экран «да», если введённый текст — палиндром и «нет» — если нет.

Решение:
string = input()
string = string.lower().replace(' ', '')
if string == string[::-1]:
    print('Да')
else:
    print('Нет')

==============================================================================================================

Напишите программу, которая преобразует номер телефона, введённого пользователем в защищённый вид. 

Решение:
number = input()
if len(number) >= 8 and str.isdigit(number):
    i = '*'
    print(((len(number)-4) * i + number[-4:]).lower())
else:
    print('Ошибка')

==============================================================================================================

Программа должна получить строку от пользователя с помощью input. 
Если в строке найден символ #, программа должна вывести часть строки до этого символа. 
Иначе — программа должна вывести на экран исходную строку.

Решение:
string = input('Enter the data')
if '#' in string:
    i = string.find('#')
    print(string[:i])
else:
    print(string)

==============================================================================================================
		ЦИКЛ WHILE И МОДУЛИ
==============================================================================================================
Напишите программу, которая выводит на экран все четные числа начиная с 2 и заканчивая 20. 
Каждое из чисел должно быть выведено на новой строке.

Решение:
i = 0
while i <= 18:
    i += 2
    print(i)

==============================================================================================================

Напишите программу, которая выводит на экран все нечетные числа начиная с 31 и заканчивая 11. 
Каждое из чисел должно быть выведено на новой строке.

Решение:
i = 33
while i > 11:
    i -= 2
    print (i)

==============================================================================================================

Напишите программу, в которой переменной string присвоено значение, введённое пользователем. 
Тип переменной string — строка.
Программа должна вывести каждую букву переменной string на новой строке. 

Решение:
string = input('Enter the data')
i = 0
while (len(string) - 1) >= i >= 0:
    print(string[i])
    i += 1

==============================================================================================================

Напишите программу, в которой переменной string присвоено значение, введённое пользователем. 
Тип переменной string — строка.
Программа должна вывести каждую букву переменной string на новой строке, используя цикл while. 
Если в строке встретятся два символа # подряд, цикл должен быть остановлен с помощью оператора break.

Решение:
string = input('Enter the data')
i = 0
while i < len(string):
    if string[i:i+2] == '##':
        break
    print(string[i])
    i += 1

==============================================================================================================

Измените программу «Задача с выходом из цикла» так, 
чтобы при отсутствии двух решеток подряд она выводила в конце своей работы надпись «проверено».

Решение:
string = input('Enter the data')
i = 0
while i < len(string):
    if string[i:i+2] == '##':
        break
    print(string[i])
    i += 1
else:
    print('проверено')

==============================================================================================================
		СПИСКИ, КОРТЕЖИ И ЦИКЛ FOR
==============================================================================================================

Написать программу, в которой объявлено три переменные:
    Первая должна называться first_list и быть списком только числовых значений. 
	То есть элементы first_list могут быть только целые или дробные числа.
    Вторая переменная second_list должна быть списком строк, и, соответственно, содержать только строковые значения.
    Третья переменная third_list должна быть списком, в котором есть элементы как строчного, так и числового типа. 

Решение:
first_list = [1, 13, 26]
second_list = ["Иван", "Петр", "Джон"]
third_list = ["Иван", 12, "Джон", 12.5]

==============================================================================================================

Написать программу, которая подсчитывает количество слов в предложении, введенном пользователем.

Решение:
string = input()
string_div = string.split()
print(len(string_div))

==============================================================================================================

Написать программу, которая находит самое длинное слово в предложении, введенном пользователем.

Решение:
string = input('Enter a sentence')
string_div = string.split()
long_word = ''
for word in string_div:
    if len(word) > len(long_word):
        long_word = word
print(long_word)

==============================================================================================================

Напишите программу, которая переворачивает слова в предложении.

Решение:
string = input('Enter a sentence')
words = string.split()
one_word = words[::-1]
result = ' '.join(one_word)
print(result)

==============================================================================================================

Написать программу, которая подсчитывает и выводит на экран, сколько раз заданное слово встречается в предложении.

Решение:
string = input()
word = input()
string = string.lower().replace(',', ' ').replace('.', ' ').split()
word = word.lower().replace(',', ' ').replace('.', ' ')
i = 0
for num in string:
    if word == num:
        i += 1
print(i)

==============================================================================================================

Нужно отсортировать список numbers по возрастанию и вывести его на экран с помощью функции print

Решение:
string = input('Enter a sentence')
string = string.split()
numbers = []
for num in string:
    if num.isdigit():
        numbers.append(int(num))
numbers.sort()
print(numbers)

==============================================================================================================

Напишите программу, которая делит введённое пользователем предложение на слова. 
Учтите, что между словами может быть больше одного пробела. 
После этого программа должна вывести на экран слова вместе с порядковыми номерами в предложении. 
Номера должны начинаться с единицы.

Решение:
words = input()
words = words.split()
for el in enumerate(words, start=1):
    i, e = el
    print(i, e)

==============================================================================================================
		СЛОВАРИ
==============================================================================================================

В этом уроке надо написать программу, в которой объявлена переменная first_dict. Тип переменной first_dict — словарь. 
Программа должна вывести на экран значение каждого из ключей. 

Решение:
first_dict = {
    "1, 2, 3": 1, 
    (1, 2, 3): ["One", "two", "three"], 
    5.6: "hello"
}
print(first_dict)

==============================================================================================================

Напишите программу, с помощью которой пользователь сможет заполнить простой каталог товаров.
Если пользователь вводит несколько одинаковых наименований товара, их количество должно суммироваться в одном ключе словаря

Решение:
catalog = {}

for i in range(3):
    nam = input('Name of product')
    amt = int(input('Amount'))
    if nam in catalog:
        catalog[nam] += amt
    else:
        catalog[nam] = amt

for k in catalog:
    print(k, ':', catalog[k])

==============================================================================================================

Написать программу, которая должна разделить строку на слова по символу пробела, точке или запятой и 
подсчитать, сколько раз каждое из слов встречается в строке.
Слова должны считаться одинаковыми без учёта регистра.
Пустые слова, которые могут появиться из‑за двух и более пробелов подряд, не должны участвовать в подсчёте.
Программа должна вывести слово, знак двоеточия и число раз, которое это слово встречается. 

Решение:
string = input()
string = string.lower().replace(',', ' ').replace('.', ' ')
catalog = {}

for word in string.split():
    if word in catalog:
        catalog[word] += 1
    else:
        catalog[word] = 1

for k in catalog:
    print(k, ':', catalog[k])

==============================================================================================================

Написать программу, которая делает тоже самое, что и в задаче «Подсчёт одинаковых слов» с одним лишь отличием — 
слова должны выводиться на экран в алфавитном порядке. 

Решение:
string = input()
string = string.lower().replace(',', ' ').replace('.', ' ')
catalog = {}

for word in string.split():
    if word in catalog:
        catalog[word] += 1
    else:
        catalog[word] = 1

catalog1 = list(catalog.keys())
catalog1.sort()

for k in catalog1:
    print(k, ':', catalog[k])

==============================================================================================================

Усовершенствуйте предыдущую программу. 
Единственное, что нужно там изменить — это вывод результата на экран. 
Сделайте это с помощью метода items().

Решение:
catalog = {}

for i in range(3):
    nam = input('Name of product')
    amt = int(input('Amount'))
    if nam in catalog:
        catalog[nam] += amt
    else:
        catalog[nam] = amt

for key, value in catalog.items():
    print(key, ':', value)

==============================================================================================================
		ФУНКЦИИ
==============================================================================================================

Написать программу со своей функцией, которая высчитывает и выводит на экран факториал числа, введенного пользователем.

Решение:
def factorial(n):
    factorial = 1
    for i in range(2, n+1):
        factorial *= i
    print(factorial)

n = int(input())
factorial(n)

==============================================================================================================

Перепишите функцию factorial так, чтобы она возвращала, а не печатала результат вычисления факториала. 
Выводить результат на экран не обязательно.

Решение:
def factorial(n):
    factorial = 1
    for i in range(2, n+1):
        factorial *= i
    return factorial

n = 5
factorial(n)

==============================================================================================================

Измените программу из предыдущего так, чтобы n было необязательным аргументом, а значение n по‑умолчанию было бы равно 13.

Решение:
def factorial(n=13):
    factorial = 1
    for i in range(2, n+1):
        factorial *= i
    return factorial

fac = factorial(13)
print(fac)

==============================================================================================================

Написать функцию для выбора правильной формы существительного в зависимости от переданного количества. 
Функция должна называться choose_plural и принимать два параметра. 
Первый параметр — это количество. 
Второй — это кортеж из трех вариантов склонения существительного.
Эта функция должна возвращать подходящее существительное, склеенное с переданным количеством.

Решение:
def choose_plural(n, kort=('a', 'b', 'c')):
    n = str(n)
    if n[-1:] == '1' and n[-2:] != '11':
        return n, kort[0]
    if (n[-1:] == '2' or n[-1:] == '3' or n[-1:] == '4') and (n[-2:] != '12' and n[-2:] != '13' and n[-2:] != '14'):
        return n, kort[1]
    else:
        return n, kort[2]

result_1 = choose_plural(23, ('копейка', 'копейки', 'копеек'))
print(result_1)
result_2 = choose_plural(7, ('рубль', 'рубля', 'рублей'))
print(result_2)
result_3 = choose_plural(51, ('цент', 'цента', 'центов'))
print(result_3)

==============================================================================================================

Шифр Цезаря. Написать программу с функцией encrypt. 
Эта функция должна принимать два аргумента — исходную строку s и ключ k.
Функция encrypt должна шифровать исходную строку s c ключом k. 
При этом, шифруются только символы, которые есть в алфавите. 
Знаки препинания, пробелы и другие символы функция должна оставлять «как есть». 
Исходная строка должна быть преобразована к верхнему регистру. 
То есть, в результате шифрования строки Привет world! с k=5 должно получится ФХНЖЙЧ WORLD!. 
Ключ шифрования может быть каким угодно большим числом.

Решение:
def encrypt(message, k):
    letters = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ"
    message = message.upper()
    result = ''
    for i in message:
        sharp_index = letters.find(i)
        if sharp_index != -1:
            key = sharp_index + k
            key = key % len(letters)
            result += letters[key]
        else:
            result += i
    return result

message = "Привет world!"
encrypted_message = encrypt(message, 67)
decrypted_message = encrypt(encrypted_message, -67)
print(encrypted_message)
print(decrypted_message)

==============================================================================================================
		ОБРАБОТКА ИСКЛЮЧЕНИЙ
==============================================================================================================

Написать программу, которая складывает два числа, введенные пользователем и выводит сумму на экран. 
Обработать исключение ValueError, которое возникнет, если пользователь введет не числа.

Решение:
a = input("Введите первое число")
b = input("Введите второе число")
try:
    a = int(a)
    b = int(b)
    print(a + b)
except ValueError:
    print('Вы ввели не число')

==============================================================================================================
		РАБОТА С ФАЙЛАМИ
==============================================================================================================

Напишите программу, которая читает любой текстовый файл и выводит его содержимое на экран.

Решение:
f = open('example.txt')
content = f.read()
print(content)

==============================================================================================================

Напишите программу, которая записывает в любой файл любую информацию. 

Решение:
f = open('example_x.txt', 'w')
f.write('Важная информация\n')
f.write('Вторая по важности информация')
f.close()

==============================================================================================================

Напишите программу, которая записывает в любой файл любую информацию. 
Открытие файла для записи нужно сделать с помощью контекстного менеджера. 

Решение:
with open('example.txt', 'w') as f:
    f.write('Стихи Есенина')

==============================================================================================================

Написать каталог товаров с сохранением введенных данных в текстовый файл. 
Переменная catalog должна быть не пустой, а заполнена значениями из файла. 
То есть, нужно прочитать файл, разбить содержимое на строки и записать полученные данные в словарь. 
Текст до двоеточия должен быть ключом, а после двоеточия — количеством.

Решение:
catalog = {}

with open('catalog.txt', 'r') as f:
    for line in f:
        name, count = line.split(':')
        catalog[name] = int(count)

for i in range(3):
    nam = input('Name of product')
    amt = int(input('Amount'))
    if nam in catalog:
        catalog[nam] += amt
    else:
        catalog[nam] = amt

with open('catalog.txt', 'w') as f:
    for k,v in catalog.items():
        f.write('{}:{}\n'.format(k,v))

==============================================================================================================







